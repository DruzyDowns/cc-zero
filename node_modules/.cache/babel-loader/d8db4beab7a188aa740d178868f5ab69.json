{"ast":null,"code":"import _objectSpread from \"/Users/andrewdowns/dev/cc-zero/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/andrewdowns/dev/cc-zero/src/App.js\";\nimport React, { Component } from \"react\";\nimport Gif from \"./Gif\";\n\nconst Header = ({\n  clearSearch,\n  hasResults\n}) => React.createElement(\"div\", {\n  className: \"header grid\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5\n  },\n  __self: this\n}, \" \", hasResults ? React.createElement(\"button\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  onClick: clearSearch,\n  src: require(\"./images/close-icon.svg\"),\n  className: \"block mx-auto\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n})) : React.createElement(\"h1\", {\n  className: \"title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, \"JIFFY\"));\n\nconst UserHint = ({\n  loading,\n  hintText\n}) => React.createElement(\"div\", {\n  className: \"user-hint\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, loading ? React.createElement(\"img\", {\n  src: require(\"./images/loader.svg\"),\n  className: \"block mx-auto\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}) : hintText);\n\nconst randomChoice = arr => {\n  const randIndex = Math.floor(Math.random() * arr.length);\n  return arr[randIndex];\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.searchGiphy = async searchTerm => {\n      this.setState({\n        loading: true\n      });\n\n      try {\n        const response = await fetch(`https://openaccess-api.clevelandart.org/api/artworks/?cc0&q=${searchTerm}&limit=50`);\n\n        const _ref = await response.json(),\n              data = _ref.data;\n\n        if (!data.length) {\n          throw `Nothing found for ${searchTerm}, please try another search`;\n        }\n\n        const rando = randomChoice(data.data); //console.log(data[0].images.original.mp4);\n        //const gif = rando.images.original.mp4\n\n        this.setState((prevState, props) => _objectSpread({}, prevState, {\n          gifs: [...prevState.gifs, rando],\n          hintText: `Press enter for more ${searchTerm}`,\n          loading: false\n        }));\n      } catch (error) {\n        this.setState((prevState, props) => _objectSpread({}, prevState, {\n          loading: false,\n          hintText: error\n        }));\n      }\n    };\n\n    this.handleChange = event => {\n      const value = event.target.value;\n      this.setState((prevState, props) => _objectSpread({}, prevState, {\n        searchTerm: value,\n        hintText: value.length > 2 ? `Press enter to search for ${value}` : \"\"\n      }));\n    };\n\n    this.handleKeyPress = event => {\n      const value = event.target.value;\n\n      if (value.length > 2 && event.key === \"Enter\") {\n        //alert(`Search for ${value}`);\n        this.searchGiphy(value);\n      }\n    };\n\n    this.clearSearch = () => {\n      this.setState((prevState, props) => _objectSpread({}, prevState, {\n        searchTerm: \"\",\n        hintText: \"\",\n        gifs: []\n      })); //document.querySelector(\"input\").focus();\n\n      this.textInput.focus();\n    };\n\n    this.state = {\n      searchTerm: \"\",\n      hintText: \"\",\n      gifs: []\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          searchTerm = _this$state.searchTerm,\n          gifs = _this$state.gifs;\n    const hasResults = gifs.length;\n    return React.createElement(\"div\", {\n      className: \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Header, {\n      clearSearch: this.clearSearch,\n      hasResults: hasResults,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"search grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, this.state.gifs.map(gif => React.createElement(Gif, Object.assign({}, gif, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }))), React.createElement(\"input\", {\n      ref: input => {\n        this.textInput = input;\n      },\n      className: \"input grid-item\",\n      placeholder: \"Type something\",\n      onChange: this.handleChange,\n      onKeyPress: this.handleKeyPress,\n      value: searchTerm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })), React.createElement(UserHint, Object.assign({}, this.state, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/andrewdowns/dev/cc-zero/src/App.js"],"names":["React","Component","Gif","Header","clearSearch","hasResults","require","UserHint","loading","hintText","randomChoice","arr","randIndex","Math","floor","random","length","App","constructor","props","searchGiphy","searchTerm","setState","response","fetch","json","data","rando","prevState","gifs","error","handleChange","event","value","target","handleKeyPress","key","textInput","focus","state","render","map","gif","input"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Gif from \"./Gif\";\n\nconst Header = ({ clearSearch, hasResults }) => (\n  <div className=\"header grid\">\n    {\" \"}\n    {hasResults ? (\n      <button>\n        <img\n          onClick={clearSearch}\n          src={require(\"./images/close-icon.svg\")}\n          className=\"block mx-auto\"\n        />\n      </button>\n    ) : (\n      <h1 className=\"title\">JIFFY</h1>\n    )}\n  </div>\n);\n\nconst UserHint = ({ loading, hintText }) => (\n  <div className=\"user-hint\">\n    {loading ? (\n      <img src={require(\"./images/loader.svg\")} className=\"block mx-auto\" />\n    ) : (\n      hintText\n    )}\n  </div>\n);\n\nconst randomChoice = (arr) => {\n  const randIndex = Math.floor(Math.random() * arr.length);\n  return arr[randIndex];\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchTerm: \"\",\n      hintText: \"\",\n      gifs: [],\n    };\n  }\n\n  searchGiphy = async (searchTerm) => {\n    this.setState({\n      loading: true,\n    });\n    try {\n      const response = await fetch(\n        `https://openaccess-api.clevelandart.org/api/artworks/?cc0&q=${searchTerm}&limit=50`\n      );\n      const { data } = await response.json();\n\n      if (!data.length) {\n        throw `Nothing found for ${searchTerm}, please try another search`;\n      }\n\n      const rando = randomChoice(data.data);\n      //console.log(data[0].images.original.mp4);\n\n      //const gif = rando.images.original.mp4\n      this.setState((prevState, props) => ({\n        ...prevState,\n        gifs: [...prevState.gifs, rando],\n        hintText: `Press enter for more ${searchTerm}`,\n        loading: false,\n      }));\n    } catch (error) {\n      this.setState((prevState, props) => ({\n        ...prevState,\n        loading: false,\n        hintText: error,\n      }));\n    }\n  };\n\n  handleChange = (event) => {\n    const { value } = event.target;\n    this.setState((prevState, props) => ({\n      ...prevState,\n      searchTerm: value,\n      hintText: value.length > 2 ? `Press enter to search for ${value}` : \"\",\n    }));\n  };\n\n  handleKeyPress = (event) => {\n    const { value } = event.target;\n    if (value.length > 2 && event.key === \"Enter\") {\n      //alert(`Search for ${value}`);\n      this.searchGiphy(value);\n    }\n  };\n\n  clearSearch = () => {\n    this.setState((prevState, props) => ({\n      ...prevState,\n      searchTerm: \"\",\n      hintText: \"\",\n      gifs: [],\n    }));\n    //document.querySelector(\"input\").focus();\n    this.textInput.focus();\n  };\n\n  render() {\n    const { searchTerm, gifs } = this.state;\n    const hasResults = gifs.length;\n    return (\n      <div className=\"page\">\n        <Header clearSearch={this.clearSearch} hasResults={hasResults} />\n        <div className=\"search grid\">\n          {}\n          {}\n\n          {this.state.gifs.map((gif) => (\n            <Gif {...gif} />\n          ))}\n\n          <input\n            ref={(input) => {\n              this.textInput = input;\n            }}\n            className=\"input grid-item\"\n            placeholder=\"Type something\"\n            onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress}\n            value={searchTerm}\n          />\n        </div>\n        <UserHint {...this.state} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}